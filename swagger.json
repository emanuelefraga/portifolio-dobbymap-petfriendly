{
  "openapi": "3.0.3",
  "info": {
    "title": "DogMap API",
    "description": "API REST para sistema de locais pet-friendly.\n\n## Sobre o Projeto\nO DogMap √© uma plataforma que permite aos usu√°rios descobrir, avaliar e favoritar locais que aceitam pets.\n\n## Funcionalidades Principais\n- **Usu√°rios**: Cadastro e gerenciamento de usu√°rios com informa√ß√µes de seus pets\n- **Locais**: Cat√°logo de estabelecimentos pet-friendly com diferentes categorias\n- **Avalia√ß√µes**: Sistema de avalia√ß√µes e coment√°rios para os locais\n- **Favoritos**: Lista personalizada de locais favoritos por usu√°rio\n\n## Tecnologias\n- Node.js + Express\n- Dados mockados para desenvolvimento\n- Swagger para documenta√ß√£o",
    "version": "1.0.0",
    "contact": {
      "name": "DogMap Team",
      "email": "contato@dogmap.com",
      "url": "https://dogmap.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3009",
      "description": "Servidor de Desenvolvimento"
    },
    {
      "url": "https://api.dogmap.com",
      "description": "Servidor de Produ√ß√£o"
    }
  ],
  "tags": [
    {
      "name": "Usu√°rios",
      "description": "Endpoints para gerenciamento de usu√°rios e seus pets"
    },
    {
      "name": "Locais",
      "description": "Endpoints para gerenciamento de locais pet-friendly"
    },
    {
      "name": "Avalia√ß√µes",
      "description": "Endpoints para gerenciamento de avalia√ß√µes e coment√°rios"
    },
    {
      "name": "Favoritos",
      "description": "Endpoints para gerenciamento de favoritos dos usu√°rios"
    },
    {
      "name": "Geral",
      "description": "Endpoints gerais da API"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "Informa√ß√µes da API",
        "description": "Endpoint raiz que retorna informa√ß√µes b√°sicas sobre a API",
        "tags": ["Geral"],
        "responses": {
          "200": {
            "description": "Informa√ß√µes da API retornadas com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "üêï Bem-vindo √† DogMap API!"
                    },
                    "version": {
                      "type": "string",
                      "example": "1.0.0"
                    },
                    "documentation": {
                      "type": "string",
                      "example": "/api-docs"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "summary": "Lista todos os usu√°rios",
        "description": "Retorna uma lista completa de todos os usu√°rios cadastrados no sistema",
        "tags": ["Usu√°rios"],
        "responses": {
          "200": {
            "description": "Lista de usu√°rios retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    },
                    "count": {
                      "type": "integer",
                      "description": "N√∫mero total de usu√°rios",
                      "example": 5
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "summary": "Cadastra um novo usu√°rio",
        "description": "Cria um novo usu√°rio com informa√ß√µes pessoais e dados do pet",
        "tags": ["Usu√°rios"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "email", "pet"],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Nome completo do usu√°rio",
                    "example": "Jo√£o Silva",
                    "minLength": 2,
                    "maxLength": 100
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Email √∫nico do usu√°rio",
                    "example": "joao.silva@email.com"
                  },
                  "pet": {
                    "$ref": "#/components/schemas/PetInput"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usu√°rio criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Usu√°rio criado com sucesso"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "summary": "Busca um usu√°rio por ID",
        "description": "Retorna as informa√ß√µes detalhadas de um usu√°rio espec√≠fico",
        "tags": ["Usu√°rios"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID √∫nico do usu√°rio",
            "schema": {
              "type": "string"
            },
            "example": "user_123"
          }
        ],
        "responses": {
          "200": {
            "description": "Usu√°rio encontrado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/places": {
      "get": {
        "summary": "Lista todos os locais",
        "description": "Retorna uma lista de locais pet-friendly com possibilidade de filtro por tipo",
        "tags": ["Locais"],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Filtrar locais por tipo espec√≠fico",
            "schema": {
              "type": "string",
              "enum": ["Pet Shop", "Cl√≠nica Veterin√°ria", "Parque", "Shopping", "Praia", "Restaurante", "Hotel"]
            },
            "example": "Pet Shop"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de locais retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Place"
                      }
                    },
                    "count": {
                      "type": "integer",
                      "description": "N√∫mero total de locais",
                      "example": 10
                    },
                    "filters": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Tipo de filtro aplicado",
                          "example": "Pet Shop"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "summary": "Cadastra um novo local",
        "description": "Cria um novo local pet-friendly no sistema",
        "tags": ["Locais"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "type"],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Nome do estabelecimento",
                    "example": "Pet Shop Amigo Fiel",
                    "minLength": 2,
                    "maxLength": 100
                  },
                  "type": {
                    "type": "string",
                    "description": "Categoria do local",
                    "enum": ["Pet Shop", "Cl√≠nica Veterin√°ria", "Parque", "Shopping", "Praia", "Restaurante", "Hotel"],
                    "example": "Pet Shop"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Local criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Local criado com sucesso"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Place"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/places/{id}": {
      "get": {
        "summary": "Busca um local por ID",
        "description": "Retorna as informa√ß√µes detalhadas de um local espec√≠fico",
        "tags": ["Locais"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID √∫nico do local",
            "schema": {
              "type": "string"
            },
            "example": "place_456"
          }
        ],
        "responses": {
          "200": {
            "description": "Local encontrado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Place"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/places/{id}/reviews": {
      "get": {
        "summary": "Lista avalia√ß√µes de um local",
        "description": "Retorna todas as avalia√ß√µes e coment√°rios de um local espec√≠fico",
        "tags": ["Avalia√ß√µes"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID do local",
            "schema": {
              "type": "string"
            },
            "example": "place_456"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de avalia√ß√µes retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Review"
                      }
                    },
                    "count": {
                      "type": "integer",
                      "description": "N√∫mero total de avalia√ß√µes",
                      "example": 15
                    },
                    "place": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "summary": "Cria uma nova avalia√ß√£o",
        "description": "Permite que um usu√°rio avalie e comente sobre um local",
        "tags": ["Avalia√ß√µes"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID do local",
            "schema": {
              "type": "string"
            },
            "example": "place_456"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["userId", "rating", "comment"],
                "properties": {
                  "userId": {
                    "type": "string",
                    "description": "ID do usu√°rio que est√° fazendo a avalia√ß√£o",
                    "example": "user_123"
                  },
                  "rating": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 5,
                    "description": "Nota da avalia√ß√£o (1-5)",
                    "example": 5
                  },
                  "comment": {
                    "type": "string",
                    "description": "Coment√°rio da avalia√ß√£o",
                    "example": "Excelente atendimento! Meu cachorro adorou o local.",
                    "minLength": 10,
                    "maxLength": 500
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Avalia√ß√£o criada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Review"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "place": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/users/{id}/favorites": {
      "get": {
        "summary": "Lista favoritos de um usu√°rio",
        "description": "Retorna todos os locais favoritados por um usu√°rio espec√≠fico",
        "tags": ["Favoritos"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID do usu√°rio",
            "schema": {
              "type": "string"
            },
            "example": "user_123"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de favoritos retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Favorite"
                      }
                    },
                    "count": {
                      "type": "integer",
                      "description": "N√∫mero total de favoritos",
                      "example": 8
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/users/{id}/favorites/{placeId}": {
      "post": {
        "summary": "Adiciona local aos favoritos",
        "description": "Adiciona um local espec√≠fico √† lista de favoritos do usu√°rio",
        "tags": ["Favoritos"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID do usu√°rio",
            "schema": {
              "type": "string"
            },
            "example": "user_123"
          },
          {
            "name": "placeId",
            "in": "path",
            "required": true,
            "description": "ID do local",
            "schema": {
              "type": "string"
            },
            "example": "place_456"
          }
        ],
        "responses": {
          "201": {
            "description": "Local adicionado aos favoritos com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Local adicionado aos favoritos com sucesso"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Favorite"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "summary": "Remove local dos favoritos",
        "description": "Remove um local espec√≠fico da lista de favoritos do usu√°rio",
        "tags": ["Favoritos"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID do usu√°rio",
            "schema": {
              "type": "string"
            },
            "example": "user_123"
          },
          {
            "name": "placeId",
            "in": "path",
            "required": true,
            "description": "ID do local",
            "schema": {
              "type": "string"
            },
            "example": "place_456"
          }
        ],
        "responses": {
          "200": {
            "description": "Local removido dos favoritos com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Local removido dos favoritos com sucesso"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "userId": {
                          "type": "string"
                        },
                        "placeId": {
                          "type": "string"
                        },
                        "place": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Pet": {
        "type": "object",
        "description": "Informa√ß√µes sobre o pet do usu√°rio",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nome do pet",
            "example": "Rex"
          },
          "type": {
            "type": "string",
            "description": "Tipo do pet",
            "example": "Cachorro"
          },
          "breed": {
            "type": "string",
            "description": "Ra√ßa do pet",
            "example": "Golden Retriever"
          }
        },
        "required": ["name", "type", "breed"]
      },
      "PetInput": {
        "type": "object",
        "description": "Dados para cadastro de um pet",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nome do pet",
            "example": "Rex",
            "minLength": 1,
            "maxLength": 50
          },
          "type": {
            "type": "string",
            "description": "Tipo do pet",
            "example": "Cachorro",
            "enum": ["Cachorro", "Gato", "P√°ssaro", "Peixe", "Outros"]
          },
          "breed": {
            "type": "string",
            "description": "Ra√ßa do pet",
            "example": "Golden Retriever",
            "minLength": 1,
            "maxLength": 50
          }
        },
        "required": ["name", "type", "breed"]
      },
      "User": {
        "type": "object",
        "description": "Informa√ß√µes do usu√°rio",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID √∫nico do usu√°rio",
            "example": "user_123"
          },
          "name": {
            "type": "string",
            "description": "Nome completo do usu√°rio",
            "example": "Jo√£o Silva"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email do usu√°rio",
            "example": "joao.silva@email.com"
          },
          "pet": {
            "$ref": "#/components/schemas/Pet"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Data de cria√ß√£o do usu√°rio",
            "example": "2024-01-15T10:30:00Z"
          }
        },
        "required": ["id", "name", "email", "pet"]
      },
      "Place": {
        "type": "object",
        "description": "Informa√ß√µes do local pet-friendly",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID √∫nico do local",
            "example": "place_456"
          },
          "name": {
            "type": "string",
            "description": "Nome do estabelecimento",
            "example": "Pet Shop Amigo Fiel"
          },
          "type": {
            "type": "string",
            "description": "Categoria do local",
            "example": "Pet Shop",
            "enum": ["Pet Shop", "Cl√≠nica Veterin√°ria", "Parque", "Shopping", "Praia", "Restaurante", "Hotel"]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Data de cria√ß√£o do local",
            "example": "2024-01-15T10:30:00Z"
          }
        },
        "required": ["id", "name", "type"]
      },
      "Review": {
        "type": "object",
        "description": "Avalia√ß√£o de um local por um usu√°rio",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID √∫nico da avalia√ß√£o",
            "example": "review_789"
          },
          "userId": {
            "type": "string",
            "description": "ID do usu√°rio que fez a avalia√ß√£o",
            "example": "user_123"
          },
          "placeId": {
            "type": "string",
            "description": "ID do local avaliado",
            "example": "place_456"
          },
          "rating": {
            "type": "integer",
            "minimum": 1,
            "maximum": 5,
            "description": "Nota da avalia√ß√£o (1-5)",
            "example": 5
          },
          "comment": {
            "type": "string",
            "description": "Coment√°rio da avalia√ß√£o",
            "example": "Excelente atendimento! Meu cachorro adorou o local."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Data de cria√ß√£o da avalia√ß√£o",
            "example": "2024-01-15T10:30:00Z"
          }
        },
        "required": ["id", "userId", "placeId", "rating", "comment", "createdAt"]
      },
      "Favorite": {
        "type": "object",
        "description": "Local favoritado por um usu√°rio",
        "properties": {
          "userId": {
            "type": "string",
            "description": "ID do usu√°rio",
            "example": "user_123"
          },
          "placeId": {
            "type": "string",
            "description": "ID do local favoritado",
            "example": "place_456"
          },
          "place": {
            "$ref": "#/components/schemas/Place"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Data de adi√ß√£o aos favoritos",
            "example": "2024-01-15T10:30:00Z"
          }
        },
        "required": ["userId", "placeId", "place"]
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Dados inv√°lidos ou obrigat√≥rios n√£o fornecidos",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "error": {
                  "type": "string",
                  "example": "Dados obrigat√≥rios n√£o fornecidos"
                },
                "message": {
                  "type": "string",
                  "example": "Nome, email e informa√ß√µes do pet s√£o obrigat√≥rios"
                }
              }
            }
          }
        }
      },
      "NotFound": {
        "description": "Recurso n√£o encontrado",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "error": {
                  "type": "string",
                  "example": "Usu√°rio n√£o encontrado"
                },
                "message": {
                  "type": "string",
                  "example": "Usu√°rio com ID user_123 n√£o foi encontrado"
                }
              }
            }
          }
        }
      },
      "MethodNotAllowed": {
        "description": "M√©todo HTTP n√£o permitido para este endpoint",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "error": {
                  "type": "string",
                  "example": "M√©todo n√£o permitido"
                },
                "message": {
                  "type": "string",
                  "example": "O m√©todo PUT n√£o √© permitido para este endpoint"
                }
              }
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Erro interno do servidor",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "error": {
                  "type": "string",
                  "example": "Erro interno do servidor"
                },
                "message": {
                  "type": "string",
                  "example": "Ocorreu um erro inesperado"
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Token JWT para autentica√ß√£o (implementa√ß√£o futura)"
      }
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ]
}
